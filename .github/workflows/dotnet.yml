name: .NET

on:
  push:
    branches: [ master ]
  workflow_dispatch:
  
jobs:
  build-docker:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push image amd64 and arm64
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
        
        
  build-win_x64:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build Windows
      run: dotnet publish -c Release -r win10-x64 -p:PublishReadyToRun=true -p:PublishSingleFile=true -p:PublishTrimmed=true --self-contained true -p:IncludeNativeLibrariesForSelfExtract=true --output .\dist\win_x64
    
    - name: Prepare
      run: |
        cp .\settings_radarr.json.sample .\dist\win_x64\settings_radarr.json
        cp .\settings_4kradarr.json.sample .\dist\win_x64\settings_4kradarr.json
        cp .\settings_3dradarr.json.sample .\dist\win_x64\settings_3dradarr.json
        cp .\settings_sonarr.json.sample .\dist\win_x64\settings_sonarr.json
        cp .\settings_4ksonarr.json.sample .\dist\win_x64\settings_4ksonarr.json
    
    - name: 'Upload Artifact'
      uses: actions/upload-artifact@v2
      with:
        name: win_x64
        path: .\dist\win_x64
        retention-days: 1
        
  build-linux_x64:
    runs-on: ubuntu-latest
    needs: [build-win_x64]

    steps:
    - uses: actions/checkout@v2
      with:
          fetch-depth: 0
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build Windows
      run: dotnet publish -c Release -r linux-x64 -p:PublishReadyToRun=true -p:PublishSingleFile=true -p:PublishTrimmed=true --self-contained true -p:IncludeNativeLibrariesForSelfExtract=true --output ./dist/linux_x64
        
    - name: 'Download Windows Artifact'
      uses: actions/download-artifact@v2
      with:
        name: win_x64
        path: dist/win_x64
        
    - name: Prepare
      run: |
        cp .\settings_radarr.json.sample .\dist\win_x64\settings_radarr.json
        cp .\settings_4kradarr.json.sample .\dist\win_x64\settings_4kradarr.json
        cp .\settings_3dradarr.json.sample .\dist\win_x64\settings_3dradarr.json
        cp .\settings_sonarr.json.sample .\dist\win_x64\settings_sonarr.json
        cp .\settings_4ksonarr.json.sample .\dist\win_x64\settings_4ksonarr.json
        
        zip -r ./dist/linux_x64.zip ./dist/linux_x64/
        zip -r ./dist/win_x64.zip ./dist/win_x64/
    
    - name: Build Changelog
      id: github_release
      uses: mikepenz/release-changelog-builder-action@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
    
    - name: Get short SHA
      id: slug
      run: echo "::set-output name=sha8::$(echo ${GITHUB_SHA} | cut -c1-8)"
        
    - name: Release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        body: ${{ steps.github_release.outputs.changelog }}
        tag_name: v${{ steps.date.outputs.date }}-${{ steps.slug.outputs.sha8 }}
        files: |
          dist/linux_x64.zip
          dist/win_x64.zip
    
    
      
      
